/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Nutzeroberflaeche;

import Services.DBService;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author abv898
 */
public class MainWindowUI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    private DefaultTableModel modelFilteredTable;
    private DefaultTableModel modelChecklistTable;
    public DefaultComboBoxModel modelOrte;
    public DefaultComboBoxModel modelOrte2;
    private DBService _dbservice;

    public MainWindowUI() {
        _dbservice = new DBService();
        modelOrte = new DefaultComboBoxModel();
        modelOrte2 = new DefaultComboBoxModel();

        loadChecklists(modelOrte);
        loadChecklists(modelOrte2);

        initComponents();
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldVogelFilter = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        eintragenButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaKommentar = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jFormattedTextField_ADatum = new javax.swing.JFormattedTextField();
        jFormattedTextField_EDatum = new javax.swing.JFormattedTextField();
        jFormattedTextField_AZeit = new javax.swing.JFormattedTextField();
        jFormattedTextField_EZeit = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton_NewCList = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        importTextFeld = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        importPathButton = new javax.swing.JButton();
        importImportButton = new javax.swing.JButton();
        importLabelUpdate = new javax.swing.JLabel();
        importLabelInsert = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        aktuellerBenutzerLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        berechtigungsstufeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setText("Datum von: ");

        jLabel7.setText("Datum bis:");

        jLabel2.setText("Zeit von: ");

        jLabel8.setText("Zeit bis:");

        jLabel9.setText("Ort (Checkliste):");

        jComboBox1.setModel(modelOrte);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Vogelname:");

        jTextFieldVogelFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldVogelFilterKeyReleased(evt);
            }
        });

        jTable2.setSelectionMode(0);
        jScrollPane1.setViewportView(jTable2);

        eintragenButton.setText("Eintragen");
        eintragenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eintragenButtonActionPerformed(evt);
            }
        });

        jButton3.setText("Abbrechen / Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextAreaKommentar.setColumns(20);
        jTextAreaKommentar.setRows(5);
        jScrollPane3.setViewportView(jTextAreaKommentar);

        jLabel5.setText("Kommentar:");

        jFormattedTextField_ADatum.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        jFormattedTextField_EDatum.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        jFormattedTextField_AZeit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        jFormattedTextField_EZeit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eintragenButton)
                        .addGap(6, 6, 6))
                    .addComponent(jTextFieldVogelFilter, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jFormattedTextField_ADatum, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jFormattedTextField_EDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jFormattedTextField_AZeit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jFormattedTextField_EZeit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(736, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField_ADatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_EDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_AZeit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField_EZeit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldVogelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eintragenButton)
                    .addComponent(jButton3)))
        );

        tabbedPane.addTab("BEOBACHTUNG", jPanel1);

        jLabel3.setText("Checkliste: ");

        jComboBox2.setModel(modelOrte2);
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "lat. Name", "dt. Name", "eng. Name", "Datum", "Kommentar", "Lifer/Tick"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton_NewCList.setText("Neue Checkliste anlegen");
        jButton_NewCList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NewCListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1209, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_NewCList, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_NewCList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane.addTab("REPORTING", jPanel2);

        importTextFeld.setText("Dateipfad...");
        importTextFeld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importTextFeldActionPerformed(evt);
            }
        });

        jLabel11.setText("Importiere CSV Tabelle in Merlin Datenbank");

        importPathButton.setText("...");
        importPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importPathButtonActionPerformed(evt);
            }
        });

        importImportButton.setText("Import");
        importImportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importImportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(importLabelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(importTextFeld))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(importPathButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(importImportButton)
                    .addComponent(importLabelInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(889, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(importTextFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importPathButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importImportButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importLabelUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(importLabelInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(350, Short.MAX_VALUE))
        );

        tabbedPane.addTab("IMPORT", jPanel3);

        loginButton.setText("Login");

        jLabel1.setText("Angemeldeter User: ");

        aktuellerBenutzerLabel.setText("none");

        jLabel4.setText("Berechtigungsstufe: ");

        berechtigungsstufeLabel.setText("none");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aktuellerBenutzerLabel)
                .addGap(79, 79, 79)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(berechtigungsstufeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(tabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(jLabel1)
                    .addComponent(aktuellerBenutzerLabel)
                    .addComponent(jLabel4)
                    .addComponent(berechtigungsstufeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eintragenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eintragenButtonActionPerformed

        // Beginn: Daten holen  
        // TODO Beobachternummer momentan konstant (muss bei Login noch geholt werden)
        String beobachterNr = "2";

        // TODO Prüfung ob alle wichtigen Felder ausgefüllt sind  
        if (jFormattedTextField_ADatum.getText().isEmpty()) {
            System.err.println("A-Datum Fehlt!");
            return;
        }
        if (jTable2.getSelectedRow() == -1) {
            System.err.println("Kein Vogel ausgewählt!");
            return;
        }

        Item item = (Item) getjComboBox1().getSelectedItem();
        int ortID = item.getID();

        String vogelID = jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString();

        String anfangszeit;
        if (jFormattedTextField_AZeit.getText().isEmpty()) {
            anfangszeit = jFormattedTextField_ADatum.getText() + " 00:00";
        } else {
            anfangszeit = jFormattedTextField_ADatum.getText() + " " + jFormattedTextField_AZeit.getText();
        }

        String endzeit;
        if (jFormattedTextField_EDatum.getText().isEmpty()) {
            endzeit = anfangszeit;
        } else {
            if (jFormattedTextField_AZeit.getText().isEmpty()) {
                endzeit = jFormattedTextField_EDatum.getText() + " 00:00";
            } else {
                endzeit = jFormattedTextField_EDatum.getText() + " " + jFormattedTextField_EZeit.getText();
            }
        }

        String kommentar = jTextAreaKommentar.getText();
        // Ende: Daten holen 

        _dbservice.insert("INSERT INTO Sichten(SichtungsID,BeobNr,OrtID,VogelID,Anfangszeit,Endzeit,Kommentar) "
                + " VALUES("
                + "Seq_SichtungsID.NextVal,"
                + beobachterNr + ","
                + ortID + ","
                + vogelID + ","
                + "TO_DATE('" + anfangszeit + "', 'dd.mm.yyyy hh24:mi'),"
                + "TO_DATE('" + endzeit + "', 'dd.mm.yyyy hh24:mi'),"
                + "'" + kommentar + "')"
        );

        // TODO Bestätigung im GUI anzeigen
        System.out.println("Sichtung eingetragen");

        // Felder für einen weiteren Eintrag leeren
        jTextAreaKommentar.setText("");
        jTextFieldVogelFilter.setSelectionStart(0);
        jTextFieldVogelFilter.setSelectionEnd(jTextFieldVogelFilter.getText().length());
        jTextFieldVogelFilter.requestFocus();


    }//GEN-LAST:event_eintragenButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        loadFilteredTableData();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextFieldVogelFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldVogelFilterKeyReleased
        loadFilteredTableData();
    }//GEN-LAST:event_jTextFieldVogelFilterKeyReleased

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        loadChecklistTable();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jFormattedTextField_ADatum.setText(null);
        jFormattedTextField_AZeit.setText(null);
        jFormattedTextField_EDatum.setText(null);
        jFormattedTextField_EZeit.setText(null);

        jTextFieldVogelFilter.setText(null);
        jTextAreaKommentar.setText(null);

        if (jTable2.getRowCount() > 0) {
            modelFilteredTable.setRowCount(0);
            jTable2.setModel(modelFilteredTable);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton_NewCListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NewCListActionPerformed
        NewChecklistUI _newChecklistUI = new NewChecklistUI(this);
        _newChecklistUI.setAlwaysOnTop(true);
        _newChecklistUI.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
        _newChecklistUI.setVisible(true);
    }//GEN-LAST:event_jButton_NewCListActionPerformed

    private void importPathButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importPathButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importPathButtonActionPerformed

    private void importImportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importImportButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importImportButtonActionPerformed

    private void importTextFeldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importTextFeldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importTextFeldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aktuellerBenutzerLabel;
    private javax.swing.JLabel berechtigungsstufeLabel;
    private javax.swing.JButton eintragenButton;
    private javax.swing.JButton importImportButton;
    private javax.swing.JLabel importLabelInsert;
    private javax.swing.JLabel importLabelUpdate;
    private javax.swing.JButton importPathButton;
    private javax.swing.JTextField importTextFeld;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton_NewCList;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JFormattedTextField jFormattedTextField_ADatum;
    private javax.swing.JFormattedTextField jFormattedTextField_AZeit;
    private javax.swing.JFormattedTextField jFormattedTextField_EDatum;
    private javax.swing.JFormattedTextField jFormattedTextField_EZeit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextAreaKommentar;
    private javax.swing.JTextField jTextFieldVogelFilter;
    private javax.swing.JButton loginButton;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the loginButton
     */
    public javax.swing.JButton getLoginButton() {
        return loginButton;
    }

    /**
     * @return the aktuellerBenutzerLabel
     */
    public javax.swing.JLabel getAktuellerBenutzerLabel() {
        return aktuellerBenutzerLabel;
    }

    /**
     * @return the berechtigungsstufeLabel
     */
    public javax.swing.JLabel getBerechtigungsstufeLabel() {
        return berechtigungsstufeLabel;
    }

    public void loadChecklists(DefaultComboBoxModel model) {
        

//        model = new DefaultComboBoxModel();
        ResultSet rset = _dbservice.getChecklists();
        try {
            while (rset.next()) {
                model.addElement(new Item(rset.getInt("OrtID"), rset.getString("Checklist_Name")));
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * @return the tabbedPane
     */
    public javax.swing.JTabbedPane getTabbedPane() {
        return tabbedPane;
    }

    /**
     * @return the eintragenButton
     */
    public javax.swing.JButton getEintragenButton() {
        return eintragenButton;
    }

    /**
     * @return the importImportButton
     */
    public javax.swing.JButton getImportImportButton() {
        return importImportButton;
    }

    /**
     * @return the importPathButton
     */
    public javax.swing.JButton getImportPathButton() {
        return importPathButton;
    }

    /**
     * @return the importTextFeld
     */
    public javax.swing.JTextField getImportTextFeld() {
        return importTextFeld;
    }

    /**
     * @return the importLabelInsert
     */
    public javax.swing.JLabel getImportLabelInsert() {
        return importLabelInsert;
    }

    /**
     * @return the importLabelUpdate
     */
    public javax.swing.JLabel getImportLabelUpdate() {
        return importLabelUpdate;
    }

    /**
     * @return the jComboBox1
     */
    public javax.swing.JComboBox getjComboBox1() {
        return jComboBox1;
    }

    /**
     * @return the jComboBox2
     */
    public javax.swing.JComboBox getjComboBox2() {
        return jComboBox2;
    }

    class Item {

        private int id;
        private String string;

        public Item(int id, String string) {
            this.id = id;
            this.string = string;
        }

        public int getID() {
            return id;
        }

        public String toString() {
            return string;
        }
    }

    private void loadFilteredTableData() {
        String filter = jTextFieldVogelFilter.getText();

        if (filter.length() > 1) {
            filter = filter.toUpperCase().toUpperCase();

            Item item = (Item) getjComboBox1().getSelectedItem();

            String where_clause = "(UPPER(Name_DE) LIKE '%" + filter + "%' "
                    + " OR UPPER(Name_EN)  LIKE '%" + filter + "%' "
                    + "OR UPPER(Name_LT) LIKE '%" + filter + "%') "
                    + "AND OrtID=" + item.getID();

            modelFilteredTable = new DefaultTableModel(
                    new String[]{
                        "LAT. Name", "EN. Name", "DE. Name", "VogelID"
                    }, 0);

            final TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(modelFilteredTable);

            jTable2.setModel(modelFilteredTable);
            jTable2.setRowSorter(sorter);

            jTable2.getColumnModel().getColumn(3).setPreferredWidth(20);

            try {

                Object[] newData;
                String sqlStatement = "SELECT VogelID, Name_LT, Name_DE, Name_EN"
                        + " FROM Checklisten WHERE "
                        + where_clause
                        + " ORDER BY Name_LT";

                ResultSet rset = _dbservice.getResultSet(sqlStatement);

                while (rset.next()) {
                    newData = new Object[]{
                        rset.getString("Name_LT"),
                        rset.getString("Name_EN"),
                        rset.getString("Name_DE"),
                        rset.getInt("VogelID")};

                    modelFilteredTable.addRow(newData);
                }

                // TODO Tabelleneinträge dürfen nicht Editierbar sein
            } catch (SQLException ex) {
                System.err.println("Fehler in MainWindowUI.loadFilteredTableData()");
                System.err.println(ex);

            }
        } 
    }

    class TableItem {

        private int id;
        private String[] stringArray;

        public TableItem(int id, String[] stringArray) {
            this.id = id;
            this.stringArray = stringArray;
        }

        public int getID() {
            return id;
        }

    }

    private void loadChecklistTable() {
        modelChecklistTable = new DefaultTableModel(
                new String[]{
                    "lat. Name", "dt. Name", "eng. Name", "Zeitraum", "Kommentar", "Lifer/Tick"
                }, 0);

        Item item = (Item) getjComboBox2().getSelectedItem();

        final TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(modelChecklistTable);

        jTable1.setModel(modelChecklistTable);
        jTable1.setRowSorter(sorter);

        jTable1.getColumnModel().getColumn(5).setPreferredWidth(20);

        try {
            Object[] newData;
            String sqlStatement = "SELECT Name_LT, Name_DE, Name_EN, Anfangszeit, Endzeit, Kommentar, "
                    + " (SELECT COUNT(SichtungsID) FROM Sichten si WHERE si.VogelID=c.VogelID AND si.Anfangszeit < s.Anfangszeit) AS LiferTick "
                    + " FROM Checklisten c LEFT JOIN Sichten s ON c.VogelID = s.VogelID AND c.OrtID = s.OrtID "
                    + " WHERE c.OrtID =" + item.getID()
                    + " ORDER BY Name_LT";

            ResultSet rset = _dbservice.getResultSet(sqlStatement);

            String vLiferTick;
            String vZeitraum;
            String vEndzeit;

            while (rset.next()) {
                // Beginn: Anzeige von Liefer/Tick + Zeitraum
                vZeitraum = rset.getString("Anfangszeit");
                vEndzeit = rset.getString("Endzeit");
                if (vZeitraum != null) {
                    if (!(vZeitraum.equals(vEndzeit))) {
                        vZeitraum = vZeitraum + " - " + vEndzeit;
                    }
                    if (rset.getInt("LiferTick") > 0) {
                        vLiferTick = "Tick";
                    } else {
                        vLiferTick = "Lifer";
                    }

                } else {
                    vLiferTick = "";
                }
                // Ende: Anzeige von Liefer/Tick + Zeitraum

                newData = new Object[]{
                    rset.getString("Name_LT"),
                    rset.getString("Name_EN"),
                    rset.getString("Name_DE"),
                    vZeitraum,
                    rset.getString("Kommentar"),
                    vLiferTick};

                modelChecklistTable.addRow(newData);
            }

            // TODO Tabelleneinträge dürfen nicht Editierbar sein
        } catch (SQLException ex) {
            System.err.println("Fehler in MainWindowUI.loadChecklistTable()");
            System.err.println(ex);

        }
    }
}
