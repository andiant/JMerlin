/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Nutzeroberflaeche;

import Services.DBService;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.swing.WindowConstants;

/**
 *
 * @author andi
 */
public class NewChecklistUI extends javax.swing.JFrame {

    /**
     * Creates new form NewChecklist
     */
    private DBService _dbservice;
    private DefaultListModel modelList1;
    private DefaultListModel modelList2;
    private MainWindowUI _mainWindow;

    public NewChecklistUI() {
        _dbservice = new DBService();
        modelList1 = new DefaultListModel();
        modelList2 = new DefaultListModel();

        initComponents();
    }
    
    public NewChecklistUI(MainWindowUI ui) {
        this();
        _mainWindow = ui;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField_Region = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jTextField_Filter = new javax.swing.JTextField();
        jButton_Create = new javax.swing.JButton();
        jButton_Cancel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField_Land = new javax.swing.JTextField();
        jTextField_Lokation = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Region:");

        jList1.setModel(modelList1);
        jScrollPane1.setViewportView(jList1);

        jScrollPane2.setViewportView(jList2);

        jLabel2.setText("Filter:");

        jTextField_Filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_FilterKeyReleased(evt);
            }
        });

        jButton_Create.setText("Erstellen");
        jButton_Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CreateActionPerformed(evt);
            }
        });

        jButton_Cancel.setText("Abbrechen");
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });

        jButton1.setText("<-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("->");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Land (optional):");

        jLabel4.setText("Lokation (optional):");

        jLabel5.setText("Alle Vögel:");

        jLabel6.setText("Vögel in der Checkliste:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Region, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Land)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_Lokation, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jButton_Cancel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(jButton1)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextField_Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton_Create, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField_Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField_Region, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Land, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Lokation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton_Cancel)
                                    .addComponent(jButton_Create)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CreateActionPerformed
        if (jTextField_Region.getText().isEmpty()) {
            System.out.println("Region eingeben!");
            return;
        }

        if (jList1.getModel().getSize() == 0) {
            System.out.println("Keine Vögel ausgewählt!");
            return;
        }

        // Transaktion wird gestartet !!!
        _dbservice.setAutoCommit(false);
        _dbservice.insert("INSERT INTO ORT(OrtID, Region, Land, Lokalitaet) "
                + " VALUES(Seq_OrtID.NextVal, '" + jTextField_Region.getText() + "', '" + jTextField_Land.getText() + "', '" + jTextField_Lokation.getText() + "')");

        try {
            ResultSet rset = _dbservice.getResultSet("SELECT Seq_OrtID.CURRVAL FROM DUAL");

            if (rset.next()) {
                int OrtID = rset.getInt(1);

                ListItem vogelItem;

                for (int i = 0; i < jList1.getModel().getSize(); i++) {
                    vogelItem = (ListItem) jList1.getModel().getElementAt(i);
                    _dbservice.insert("INSERT INTO Befinden(VogelId,OrtID) VALUES(" + vogelItem.getID() + "," + OrtID + ")");
                }
            }

        } catch (SQLException ex) {
            _dbservice.rollback();
            Logger.getLogger(NewChecklistUI.class.getName()).log(Level.SEVERE, null, ex);

        }

        // Transaktion wird beendet / Commit
        _dbservice.commit();
        _dbservice.setAutoCommit(true);
        
        System.out.println("Liste Erfolgreich erstellt");
        
        this.setVisible(false);
        
        _mainWindow.modelOrte = new DefaultComboBoxModel();
        _mainWindow.modelOrte2 = new DefaultComboBoxModel();
        
        _mainWindow.loadChecklists(_mainWindow.modelOrte);
        _mainWindow.loadChecklists(_mainWindow.modelOrte2);
        
        _mainWindow.getjComboBox1().setModel(_mainWindow.modelOrte);
        _mainWindow.getjComboBox2().setModel(_mainWindow.modelOrte2);

    }//GEN-LAST:event_jButton_CreateActionPerformed

    private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton_CancelActionPerformed

    private void jTextField_FilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_FilterKeyReleased
        if (jTextField_Filter.getText().length() > 3) {
            loadFilteredBirdList(jTextField_Filter.getText());
        } else {
            jList2.setModel(new DefaultListModel());
        }
    }//GEN-LAST:event_jTextField_FilterKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List<ListItem> selectedItems = jList2.getSelectedValuesList();

        for (int i = 0; i < selectedItems.size(); i++) {
            modelList1.addElement(selectedItems.get(i));
            modelList2.removeElement(selectedItems.get(i));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        List<ListItem> selectedItems = jList1.getSelectedValuesList();

        for (int i = 0; i < selectedItems.size(); i++) {
            modelList2.addElement(selectedItems.get(i));
            modelList1.removeElement(selectedItems.get(i));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewChecklistUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewChecklistUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewChecklistUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewChecklistUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewChecklistUI().setVisible(true);
            }
        });
    }

    class ListItem {

        private int id;
        private String string;

        public ListItem(int id, String string) {
            this.id = id;
            this.string = string;
        }

        public int getID() {
            return id;
        }

        public String toString() {
            return string;
        }
    }

    private void loadFilteredBirdList(String filter) {

        // Falls bereits Vögel ausgewählt sind, sollen diese nicht nochmal zur Auswahl stehen.
        String selectedBirdIDs = "";
        ListItem item;

        for (int i = 0; i < jList1.getModel().getSize(); i++) {
            item = (ListItem) jList1.getModel().getElementAt(i);
            selectedBirdIDs = selectedBirdIDs + item.getID() + ",";
        }

        if (!(selectedBirdIDs.isEmpty())) {
            selectedBirdIDs = selectedBirdIDs + 0;
        }

        String where_cluase = " WHERE UPPER(GattungArt || ' ' || Unterart || ' ' || Name_EN || ' ' || Name_DE) LIKE '%" + filter.toUpperCase() + "%' ";

        if (!(selectedBirdIDs.isEmpty())) {
            where_cluase = where_cluase + " AND VogelID NOT IN (" + selectedBirdIDs + ") ";
        }

        // Liste2 mit den Vögeln aus dem SELECT-Ergebnis füllen
        ResultSet rset = _dbservice.getResultSet("SELECT VogelID, (GattungArt || ' ' || Unterart || ' ' || Name_EN || ' ' || Name_DE) VogelName "
                + " FROM Vogelart "
                + where_cluase
                + " ORDER BY GattungArt");

        modelList2.clear();

        jList2.setModel(modelList2);
        jList2.setSelectionMode(2);

        ListItem listItem;

        try {
            while (rset.next()) {
                listItem = new ListItem(rset.getInt("VogelID"), rset.getString("VogelName"));
                modelList2.addElement(listItem);

            }
        } catch (SQLException ex) {
            Logger.getLogger(MainWindowUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_Create;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField_Filter;
    private javax.swing.JTextField jTextField_Land;
    private javax.swing.JTextField jTextField_Lokation;
    private javax.swing.JTextField jTextField_Region;
    // End of variables declaration//GEN-END:variables
}
